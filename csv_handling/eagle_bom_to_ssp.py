#!/usr/bin/env python
# -*- coding: utf-8 -*-

# for future use of the print function
# http://stackoverflow.com/questions/493386/how-to-print-in-python-without-newline-or-space
from __future__ import print_function

import sys, csv, operator

usage_str='''
Usage: ./eagle_bom_to_ssp.py FILE
Convert a csv bom FILE generated by eagle and bom.ulp to a SSP like csv table. 
FILE must be a raw bom table (csv file) with ';' delimiter, the list type must 
be 'values'.
'''

def print_usage_and_die(msg):
	print(msg)
	print(usage_str)

def print_csv_head_line():
	print("{:s};{:s};{:s};{:s};{:s};{:s};{:s};{:s};{:s};".format("Symbols",		"Qty",		"Value",		"Package/Case",		"Part#",	"Manufacturer",		"Note / Distributor / Ordering Code",	"Device",	"Description"))

def print_csv_line(row):
	# print line as follows: Parts; Qty; Value; Package; PART#; COMMENT; Manufacturer; Device; Description;
	print("{:s};{:s};{:s};{:s};{:s};{:s};{:s};{:s};{:s};".format(row[4],		row[0],		row[1],			row[3],			row[8],		row[7],			row[6],					row[2],		row[5]))
	#for cell in row:
		#print("{:s}; ".format(cell),end="")
	#print("")

if len(sys.argv) != 2:
	print_usage_and_die('error: wrong number of arguments')
	sys.exit()

else:

	with open(sys.argv[1],'rb') as csvfile:
		reader = csv.reader(csvfile,delimiter=';')

		# sort list by "Parts" (e.g. IC201 before R104)
		# help(sorted)
		print_csv_head_line()
		print_csv_line(reader.next())
		sortedlist = sorted(reader, key=operator.itemgetter(4), reverse=False)
		for row in sortedlist:
			print_csv_line(row)